name: Build and deploy Quarter Report Azure Function App

on:
  push:
    branches:
      - master
    paths:
      - 'quarter-report/**'
  workflow_dispatch:

env:
  PACKAGE_NAME: 'quarter-report'
  NODE_VERSION: '14.x'
  FUNCTION_APP_NAME: ''


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 'Build an package'
        working-directory: ./${{ env.PACKAGE_NAME }}
        run: |
          npm ci
          npm i -g azure-functions-core-tools@3 --unsafe-perm true
          npm run pack

      - name: 'Upload package'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ./${{ env.PACKAGE_NAME }}/${{ env.PACKAGE_NAME }}.zip
          if-no-files-found: error
  
  deploy:
      if: github.ref == 'refs/heads/master'
      needs: build
      environment:
        name: production
      runs-on: ubuntu-latest
      steps:

      - name: Set variables
        run: |
          echo "FUNCTION_APP_NAME=${{ env.PACKAGE_NAME }}-prod" >> $GITHUB_ENV
      
      - uses: actions/checkout@v2

      - name: 'Download package'
        uses: actions/download-artifact@master
        with:
          name: ${{ env.PACKAGE_NAME }}
      
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Azure deploy ${{ env.PACKAGE_NAME }} Azure function app
        run: |
          azure_cfg="--resource-group ${{ secrets.AZURE_FUNCTIONS_RESOURCE_GROUP }} \
          --template-file ./${{ env.PACKAGE_NAME }}/main.bicep \
          --parameters ConfluenceLogin=${{ secrets.CONFLUENCE_LOGIN }} \
          ConfluenceToken=${{ secrets.CONFLUENCE_TOKEN }} \
          GitHubToken=${{ secrets.GH_PAT }} \
          functionAppName=${{ env.FUNCTION_APP_NAME }}"
          az deployment group create $azure_cfg

      - name: Azure deploy ${{ env.PACKAGE_NAME }}.zip package
        run: |
          az functionapp deployment source config-zip -g ${{ secrets.AZURE_FUNCTIONS_RESOURCE_GROUP }} -n ${{ env.FUNCTION_APP_NAME }} --src ./${{ env.PACKAGE_NAME }}.zip


