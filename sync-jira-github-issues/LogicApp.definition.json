{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "metadata": {
              "description": "Name of the Logic App."
            }
        },
        "logicAppLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "allowedValues": [
                "[resourceGroup().location]",
                "eastasia",
                "southeastasia",
                "centralus",
                "eastus",
                "eastus2",
                "westus",
                "northcentralus",
                "southcentralus",
                "northeurope",
                "westeurope",
                "japanwest",
                "japaneast",
                "brazilsouth",
                "australiaeast",
                "australiasoutheast",
                "southindia",
                "centralindia",
                "westindia",
                "canadacentral",
                "canadaeast",
                "uksouth",
                "ukwest",
                "westcentralus",
                "westus2",
                "koreacentral",
                "koreasouth",
                "francecentral",
                "francesouth",
                "southafricanorth",
                "southafricawest"
            ],
            "metadata": {
                "description": "Location of the Logic App."
            }
        },
        "jira_instance": {
            "type": "string",
            "metadata": {
                "description": "The url where your JIRA instance is hosted (must support https). "
            }
        },
        "jira_username": {
            "type": "string",
            "metadata": {
                "description": "Your JIRA username."
            }
        },
        "jira_password": {
            "type": "securestring",
            "metadata": {
                "description": "Your API token (https://id.atlassian.com/manage/api-tokens)."
            }
        },
        "github_api_instance": {
            "type": "string",
            "defaultValue": "https://api.github.com",
            "metadata": {
                "description": "GitHub API URI."
            }
        },
        "github_username": {
          "type": "string",
          "metadata": {
            "description": "Your JIRA username."
          }
        },
        "github_password": {
          "type": "securestring",
          "metadata": {
            "description": "Your API token (https://github.com/settings/tokens)."
          }
        },
        "connections": {
            "type": "object"
        }
    },
    "variables": {
        "github_query_uri": "org%3AVirtoCommerce+NOT+vc-docker+type%3Aissue+is%3Aopen+created%3A>%3D2020-03-01&type=Issues",
        "backlog_jql": "project = \"VP\" AND createdDate>=2020-01-01",
        "jira_issuetype": "10006",
        "jira_project": "VP"
    },
    "resources": [
        {
            "apiVersion": "2017-07-01",
            "location": "[parameters('logicAppLocation')]",
            "name": "[parameters('logicAppName')]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {
                                "jira": {
                                    "connectionId": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'jira')]",
                                    "connectionName": "jira",
                                    "id": "[resourceId('Microsoft.Web/connections', parameters('connections')['jira'])]"
                                }
                            },
                            "type": "object"
                        },
                        "jira_instance": {
                            "type": "string"
                        },
                        "jira_authorization_header": {
                            "type": "securestring"
                        },
                        "github_authorization_header": {
                            "type": "securestring"
                        },
                        "backlog_jql": {
                            "type": "string"
                        },
                        "jira_issuetype": {
                            "type": "string"
                        },
                        "jira_project": {
                            "type": "string"
                        },
                        "github_api_instance": {
                            "type": "string"
                        },
                        "github_query_uri": {
                            "type": "string"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 30
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each_GitHub_Issue": {
                            "foreach": "@variables('GitHubIssuesVar')",
                            "actions": {
                                "Add_comment_that_issue_created": {
                                    "runAfter": {
                                        "Create_a_new_issue": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "body": "Task @{parameters('jira_instance')}/browse/@{body('Create_a_new_issue')?['key']} has been created"
                                        },
                                        "headers": {
                                            "Authorization": "@{parameters('github_authorization_header')}"
                                        },
                                        "method": "POST",
                                        "uri": "@{items('For_each').url}/comments"
                                    }
                                },
                                "Create_a_new_issue": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "fields": {
                                                "description": "GitHub link: [@{item().html_url}|@{item().html_url}]\n\n======= Description from GitHub =======\n@{item().body}",
                                                "issuetype": {
                                                    "id": "@parameters('jira_issuetype')"
                                                },
                                                "labels": "Github,Operations",
                                                "summary": "@{item().title}"
                                            }
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['jira']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/issue",
                                        "queries": {
                                            "projectKey": "@parameters('jira_project')"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Keep_new_Github_Issues": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "GITHUBISSUES": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "@{concat(parameters('github_api_instance'), '/search/issues?q=', parameters('github_query_uri'))}"
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "GITHUBISSUES": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "GitHubIssuesVar",
                                        "type": "array",
                                        "value": "@body('GITHUBISSUES')['items']"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_3": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "JQL",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            }
                        },
                        "Keep_new_Github_Issues": {
                            "actions": {
                                "Filter_array": {
                                    "runAfter": {
                                        "Join_Jira_Descriptions": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query",
                                    "inputs": {
                                        "from": "@variables('GitHubIssuesVar')",
                                        "where": "@not(contains(body('Join_Jira_Descriptions'), item()['html_url']))"
                                    }
                                },
                                "GETJIRAISSUES": {
                                    "runAfter": {
                                        "Join_GitHub_URIs": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "fields": [
                                                "description"
                                            ],
                                            "jql": "@{concat(parameters('backlog_jql'), ' AND (description ~ ', body('Join_GitHub_URIs'), ')')}"
                                        },
                                        "headers": {
                                            "Authorization": "@{parameters('jira_authorization_header')}",
                                            "Content-Type": "application/json;charset=UTF-8"
                                        },
                                        "method": "POST",
                                        "uri": "@{parameters('jira_instance')}/rest/api/2/search"
                                    }
                                },
                                "Join_GitHub_URIs": {
                                    "runAfter": {
                                        "Select_GitHub_URIs": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Join",
                                    "inputs": {
                                        "from": "@body('Select_GitHub_URIs')",
                                        "joinWith": " OR description ~ "
                                    }
                                },
                                "Join_Jira_Descriptions": {
                                    "runAfter": {
                                        "Select_Jira_Descriptions": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Join",
                                    "inputs": {
                                        "from": "@body('Select_Jira_Descriptions')",
                                        "joinWith": "-"
                                    }
                                },
                                "Select_GitHub_URIs": {
                                    "runAfter": {},
                                    "type": "Select",
                                    "inputs": {
                                        "from": "@variables('GitHubIssuesVar')",
                                        "select": "@concat('\"', item().html_url, '\"')"
                                    }
                                },
                                "Select_Jira_Descriptions": {
                                    "runAfter": {
                                        "GETJIRAISSUES": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Select",
                                    "inputs": {
                                        "from": "@body('GETJIRAISSUES')['issues']",
                                        "select": "@item().fields.description"
                                    }
                                },
                                "Set_GitHubIssuesVar": {
                                    "runAfter": {
                                        "Filter_array": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "GitHubIssuesVar",
                                        "value": "@body('Filter_array')"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                          "jira": {
                            "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'jira')]",
                            "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections')['jira'])]",
                            "connectionName": "[parameters('connections')['jira']]"
                          }
                        }
                    },
                    "jira_instance": {
                        "value": "[parameters('jira_instance')]"
                    },
                    "jira_authorization_header": {
                        "value": "[concat('Basic ', base64(concat(parameters('jira_username'), ':', parameters('jira_password'))))]"
                    },
                    "github_authorization_header": {
                        "value": "[concat('Basic ', base64(concat(parameters('github_username'), ':', parameters('github_password'))))]"
                    },
                    "backlog_jql": {
                        "value": "[variables('backlog_jql')]"
                    },
                    "jira_issuetype": {
                        "value": "[variables('jira_issuetype')]"
                    },
                    "jira_project": {
                        "value": "[variables('jira_project')]"
                    },
                    "github_api_instance": {
                        "value": "[parameters('github_api_instance')]"
                    },
                    "github_query_uri": {
                        "value": "[variables('github_query_uri')]"
                    }
                },
                "state": "Enabled"
            },
            "scale": null,
            "tags": {},
            "type": "Microsoft.Logic/workflows",
            "dependsOn": [
              "[resourceId('Microsoft.Web/connections', parameters('connections')['jira'])]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections')['jira']]",
            "location": "[parameters('logicAppLocation')]",
            "properties": {
                "displayName": "Jira (VirtoWay)",
                "customParameterValues": {},
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', parameters('connections')['jira'])]"
                },
                "parameterValues": {
                  "jirainstance": "[parameters('jira_instance')]",
                  "username": "[parameters('jira_username')]",
                  "password": "[parameters('jira_password')]"
                }
            }
        }
    ]
}
